package com.seek.collection.queue;

import java.util.Deque;
import java.util.LinkedList;
import java.util.Queue;

/**
 * 
 * Queue{
 * 		boolean add(E e); 	增加一个元索 如果队列已满，则抛出一个IIIegaISlabEepeplian异常
 * 		boolean offer(E e);	添加一个元素并返回true       如果队列已满，则返回false
 * 		E remove();			移除并返回队列头部的元素    	如果队列为空，则抛出一个NoSuchElementException异常
 * 		E poll();	  		添加一个元素并返回true       	如果队列已满，则返回false
 * 		E element();		返回队列头部的元素             如果队列为空，则抛出一个NoSuchElementException异常
 * 		E peek();			返回队列头部的元素             如果队列为空，则返回null
 * }
 * 
 * Deque  extends Queue 
 * 		Deque接口代表一个"双端队列"，双端队列可以同时从两端来添加、删除元素，因此Deque的实现类既可以当成队列使用、也可以当成栈使用
 * 		子类：
 * 			ArrayDeque
 * 			LinkedList
 * 
 */
public class Entry {
	public static void main(String[] args) {
		
	}
}
