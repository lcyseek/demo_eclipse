package com.seek.collection.list;

import java.util.ArrayList;
import java.util.LinkedList;

public class ArrayListAndLinkedListDemo {

	public static void main(String[] args) {
		
		//尾部顺序添加数据 一般来说是ArrayList效率比较高。
//		array_tail_add_string();
//		list_tail_add_string();
		
		array_get();
		list_get();
	}

	private static void list_get() {
		LinkedList<String> linkedList = new LinkedList<>();
		//每次都是末尾添加数据
		for(int i=0;i<80000000;i++){
			linkedList.add("hello world"+i);
		}
		System.out.println("添加完数据了");
		long start = System.currentTimeMillis();
		System.out.println(linkedList.get(80000000-1000));
		long end = System.currentTimeMillis();
		System.out.println("list_get 耗时:"+(end - start));

	}

	private static void array_get() {
		// TODO Auto-generated method stub
		ArrayList<String> arrayList = new ArrayList<>();
				
		//每次都是末尾添加数据
		for(int i=0;i<80000000;i++){
			arrayList.add("hello world"+i);
		}
		
		System.out.println("添加完数据了");
		long start = System.currentTimeMillis();
		System.out.println(arrayList.get(80000000-1000));
		long end = System.currentTimeMillis();
		System.out.println("array_get 耗时:"+(end - start));
	}

	private static void list_tail_add_string() {
		LinkedList<String> linkedList = new LinkedList<>();
		long start = System.currentTimeMillis();
		//每次都是末尾添加数据
		for(int i=0;i<10000000;i++){
			linkedList.add("hello world"+i);
		}
		long end = System.currentTimeMillis();
		System.out.println("list_tail_add 耗时:"+(end - start));
	}

	private static void array_tail_add_string() {
		ArrayList<String> arrayList = new ArrayList<>();
		
		long start = System.currentTimeMillis();
		
		//每次都是末尾添加数据
		for(int i=0;i<10000000;i++){
			arrayList.add("hello world"+i);
		}
		System.out.println(arrayList.get(10000000-10000));

		long end = System.currentTimeMillis();
		System.out.println("array_tail_add 耗时:"+(end - start));
	}

}
